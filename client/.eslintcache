[{"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/App.js":"1","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/profile-forms/AddExperience.js":"2","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/profile-forms/AddEducation.js":"3","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/profiles/Profiles.js":"4","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/layout/Navbar.js":"5","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/dashboard/Dashboard.js":"6","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/actions/alert.js":"7","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/profile/ProfileAbout.js":"8","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/dashboard/Education.js":"9","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/posts/PostForm.js":"10","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/reducers/post.js":"11","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/layout/NotFound.js":"12","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/profile-forms/EditProfile.js":"13","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/auth/Register.js":"14","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/profile/ProfileGithub.js":"15","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/dashboard/DashboardActions.js":"16","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/dashboard/Experience.js":"17","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/reducers/alert.js":"18","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/profile/ProfileTop.js":"19","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/routing/Routes.js":"20"},{"size":930,"mtime":1608023763992,"results":"21","hashOfConfig":"22"},{"size":3481,"mtime":1607842232480,"results":"23","hashOfConfig":"22"},{"size":3520,"mtime":1607842213345,"results":"24","hashOfConfig":"22"},{"size":1302,"mtime":1607841222351,"results":"25","hashOfConfig":"22"},{"size":1549,"mtime":1607937620186,"results":"26","hashOfConfig":"22"},{"size":2001,"mtime":1607841808699,"results":"27","hashOfConfig":"22"},{"size":357,"mtime":1607422879596,"results":"28","hashOfConfig":"22"},{"size":1048,"mtime":1607846604506,"results":"29","hashOfConfig":"22"},{"size":1455,"mtime":1607842086644,"results":"30","hashOfConfig":"22"},{"size":1056,"mtime":1608022961908,"results":"31","hashOfConfig":"22"},{"size":1610,"mtime":1607950175423,"results":"32","hashOfConfig":"22"},{"size":332,"mtime":1608023254516,"results":"33","hashOfConfig":"22"},{"size":8019,"mtime":1607841288986,"results":"34","hashOfConfig":"22"},{"size":2920,"mtime":1607592316454,"results":"35","hashOfConfig":"22"},{"size":1684,"mtime":1607857458785,"results":"36","hashOfConfig":"22"},{"size":643,"mtime":1607842001861,"results":"37","hashOfConfig":"22"},{"size":1469,"mtime":1607842037812,"results":"38","hashOfConfig":"22"},{"size":411,"mtime":1607419446548,"results":"39","hashOfConfig":"22"},{"size":1943,"mtime":1607937620188,"results":"40","hashOfConfig":"22"},{"size":1686,"mtime":1608023845768,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7yrs19",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/App.js",[],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/profile-forms/AddExperience.js",[],["86","87"],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/profile-forms/AddEducation.js",[],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/profiles/Profiles.js",[],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/layout/Navbar.js",[],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/dashboard/Dashboard.js",[],["88","89"],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/actions/alert.js",[],["90","91"],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/profile/ProfileAbout.js",[],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/dashboard/Education.js",[],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/posts/PostForm.js",[],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/reducers/post.js",[],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/layout/NotFound.js",[],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/profile-forms/EditProfile.js",["92"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\",\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? \"\" : profile.company,\n      website: loading || !profile.website ? \"\" : profile.website,\n      location: loading || !profile.location ? \"\" : profile.location,\n      status: loading || !profile.status ? \"\" : profile.status,\n      skills: loading || !profile.skills ? \"\" : profile.skills,\n      githubusername:\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\n      bio: loading || !profile.bio ? \"\" : profile.bio,\n      twitter: loading || !profile.social ? \"\" : profile.twitter,\n      facebook: loading || !profile.social ? \"\" : profile.facebook,\n      youtube: loading || !profile.social ? \"\" : profile.youtube,\n      linkedin: loading || !profile.social ? \"\" : profile.linkedin,\n      instagram: loading || !profile.social ? \"\" : profile.instagram,\n    });\n  }, [loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Edit Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/auth/Register.js",[],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/profile/ProfileGithub.js",[],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/dashboard/DashboardActions.js",[],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/dashboard/Experience.js",[],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/reducers/alert.js",[],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/profile/ProfileTop.js",[],"/Users/nicholasdewaal/Documents/code/udemy/MERN-brad-course/client/src/components/routing/Routes.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"93","replacedBy":"99"},{"ruleId":"95","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":48,"column":6,"nodeType":"103","endLine":48,"endColumn":34,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],["105"],["106"],["105"],["106"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.facebook', 'profile.githubusername', 'profile.instagram', 'profile.linkedin', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', 'profile.twitter', 'profile.website', and 'profile.youtube'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["107"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social, profile.twitter, profile.facebook, profile.youtube, profile.linkedin, profile.instagram]",{"range":"110","text":"111"},[1608,1636],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social, profile.twitter, profile.facebook, profile.youtube, profile.linkedin, profile.instagram]"]